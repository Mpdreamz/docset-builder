name: PreRelease

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  IMAGE_NAME: mpdreamz/docs-builder
  BASE_IMAGE: mcr.microsoft.com/dotnet/nightly/runtime-deps:8.0-jammy-chiseled-aot

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      full-version: ${{ steps.bootstrap.outputs.full-version }}
      major-version: ${{ steps.bootstrap.outputs.major-version }}

    steps:
      - uses: actions/checkout@v4

      - name: Bootstrap Action Workspace
        id: bootstrap
        uses: ./.github/actions/bootstrap
        
      - name: build
        run: ./build.sh publish
        
      - name: generate
        run: .artifacts/bin/docs-builder/release/docs-builder
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .artifacts/docs/html
  
  
  build:
    runs-on: ubuntu-latest
    outputs:
      full-version: ${{ steps.bootstrap.outputs.full-version }}
      major-version: ${{ steps.bootstrap.outputs.major-version }}

    steps:
      - uses: actions/checkout@v4

      - name: Bootstrap Action Workspace
        id: bootstrap
        uses: ./.github/actions/bootstrap
        
      - name: build
        run: ./build.sh
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish app
        run: |
          dotnet publish "src/docs-builder/docs-builder.csproj" \
            /t:PublishContainer \
            -p DebugType=none \
            -p ContainerUser=1001:1001 \
            -p ContainerBaseImage=${{ env.BASE_IMAGE }} \
            -p ContainerRegistry=ghcr.io \
            -p ContainerImageTags='"edge;${{ steps.bootstrap.outputs.full-version }}"' \
            -p ContainerRepository=${{ env.IMAGE_NAME }} \
            -bl      
